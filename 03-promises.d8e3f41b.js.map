{"mappings":"oeAAAA,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,QAC9BC,EAAWH,EAAKE,cAAc,UAC9BE,EAAWJ,EAAKE,cAAc,SAC9BG,EAAUL,EAAKE,cAAc,QAC7BI,EAAYN,EAAKE,cAAc,UAI/BK,EAAQC,OAAOJ,EAASK,iBAAiBC,OAAOC,SAASC,OACzDC,EAAOR,EAAQI,iBAAiBC,OAAOC,SAASC,MAChDE,EAAWR,EAAUG,iBAAiBC,OAAOC,SAASC,MAuB5D,IAAuBG,EAAUC,EAtBjCC,QAAQC,IAAIX,GAEZJ,EAASM,iBAAiB,QAG1B,WACE,IAAI,IAAIU,EAAE,EAAGA,GAAKL,EAAUK,GAAK,EAAE,CACjCL,EAAWK,EAWVZ,GAAgBM,C,EAhBcO,IAEnCC,SAAW,GAkBYN,EAWT,EAXmBC,EAWhB,KAVP,IAAIM,SAAQ,CAACC,EAASC,KAC5BC,YAAW,KACSC,KAAKC,SAAW,GAEpCJ,EAAQN,QAAQC,IAAI,uBAAqBH,QAAiBC,QAExDQ,EAAKP,QAAQC,IAAI,sBAAoBH,QAAiBC,OAAW,GAEpEA,EAAM,KAGNY,MAAK,EAAGC,SAAAC,EAAUC,MAAAC,MACjBf,QAAQC,IAAI,uBAAqBY,QAAiBE,MAAU,IAE7DC,OAAM,EAAGJ,SAAAK,EAAUH,MAAAI,MAClBlB,QAAQC,IAAI,sBAAoBgB,QAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form');\nconst startBtn = form.querySelector('submit');\nconst delayInp = form.querySelector('delay');\nconst stepInp = form.querySelector('step');\nconst numberInp = form.querySelector('amount');\n\n\n\nconst delay = Number(delayInp.addEventListener.target.elements.value);\nconst step = stepInp.addEventListener.target.elements.value;\nconst position = numberInp.addEventListener.target.elements.value;\nconsole.log(delay)\n\nstartBtn.addEventListener('click', foo() )\n\nnewDelay = 0\nfunction foo(){\n  for(let i=1; i <= position; i += 1){\n    position = i;\n    function createPromise(position, delay) {\n      return new Promise((resolve, reject) => {\n       setTimeout(() => {\n     const shouldResolve = Math.random() > 0.3;\n     if (shouldResolve) {\n       resolve(console.log(`✅ Fulfilled promise ${position} in ${delay}ms`))\n     } else {\n       reject(console.log(`❌ Rejected promise ${position} in ${delay}ms`))\n     }\n   }, delay)})}\n     delay = delay + step;\n    //  console.log(delay)\n  }}\n\nfunction createPromise(position, delay) {\n   return new Promise((resolve, reject) => {\n    setTimeout(() => {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    resolve(console.log(`✅ Fulfilled promise ${position} in ${delay}ms`))\n  } else {\n    reject(console.log(`❌ Rejected promise ${position} in ${delay}ms`))\n  }\n}, delay)})}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  })\n"],"names":["parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$startBtn","$47d4ff9957288465$var$delayInp","$47d4ff9957288465$var$stepInp","$47d4ff9957288465$var$numberInp","$47d4ff9957288465$var$delay","Number","addEventListener","target","elements","value","$47d4ff9957288465$var$step","$47d4ff9957288465$var$position","position2","delay2","console","log","i","$47d4ff9957288465$var$foo","newDelay","Promise","resolve","reject","setTimeout","Math","random","then","position","position3","delay","delay3","catch","position4","delay4"],"version":3,"file":"03-promises.d8e3f41b.js.map"}