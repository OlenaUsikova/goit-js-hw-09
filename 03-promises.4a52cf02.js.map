{"mappings":"gfAAAA,EAAA,SAEA,IA+BuBC,EAAUC,EA/B3BC,EAAOC,SAASC,cAAc,QAC9BC,EAAWH,EAAKE,cAAc,UAC9BE,EAAWJ,EAAKE,cAAc,SAC9BG,EAAUL,EAAKE,cAAc,QAC7BI,EAAYN,EAAKE,cAAc,UAK/BK,GADQH,EAASI,iBAAiBC,OAAOC,SAASC,MAC3CN,EAAQG,iBAAiBC,OAAOC,SAASC,OAChDC,EAAWN,EAAUE,iBAAiBC,OAAOC,SAASC,MAE5DR,EAASK,iBAAiB,QAG1B,WACE,IAAI,IAAIK,EAAE,EAAGA,GAAKD,EAAUC,GAAK,EAAE,CACjCD,EAAWC,EAWMN,C,EAhBcO,KAmBZhB,EAWT,EAXmBC,EAWhB,KAVP,IAAIgB,SAAQ,SAACC,EAASC,GAC5BC,YAAW,WACSC,KAAKC,SAAW,GAEpCJ,EAAQK,QAAQC,IAAI,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,QAEhEkB,EAAKI,QAAQC,IAAI,sBAAuCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,O,GAEjEA,E,KAGAyB,MAAK,SAAAC,G,IAAGC,EAAQD,EAARE,SAAUC,EAAKH,EAALI,MACjBR,QAAQC,IAAI,uBAAwCC,OAAfG,EAAS,QAAYH,OAANK,EAAM,M,IAE3DE,OAAM,SAAAL,G,IAAGM,EAAQN,EAARE,SAAUK,EAAKP,EAALI,MAClBR,QAAQC,IAAI,sBAAqCC,OAAfQ,EAAS,QAAYR,OAANS,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form');\nconst startBtn = form.querySelector('submit');\nconst delayInp = form.querySelector('delay');\nconst stepInp = form.querySelector('step');\nconst numberInp = form.querySelector('amount');\n\n\n\nconst delay = delayInp.addEventListener.target.elements.value;\nconst step = stepInp.addEventListener.target.elements.value;\nconst position = numberInp.addEventListener.target.elements.value;\n\nstartBtn.addEventListener('click', foo() )\n\n// newDelay = 0\nfunction foo(){\n  for(let i=1; i <= position; i += 1){\n    position = i;\n    function createPromise(position, delay) {\n      return new Promise((resolve, reject) => {\n       setTimeout(() => {\n     const shouldResolve = Math.random() > 0.3;\n     if (shouldResolve) {\n       resolve(console.log(`✅ Fulfilled promise ${position} in ${delay}ms`))\n     } else {\n       reject(console.log(`❌ Rejected promise ${position} in ${delay}ms`))\n     }\n   }, delay)})}\n     delay = delay + step\n  }}\n\nfunction createPromise(position, delay) {\n   return new Promise((resolve, reject) => {\n    setTimeout(() => {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    resolve(console.log(`✅ Fulfilled promise ${position} in ${delay}ms`))\n  } else {\n    reject(console.log(`❌ Rejected promise ${position} in ${delay}ms`))\n  }\n}, delay)})}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  })\n"],"names":["parcelRequire","position2","delay2","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$startBtn","$ce04d3a99e08e73b$var$delayInp","$ce04d3a99e08e73b$var$stepInp","$ce04d3a99e08e73b$var$numberInp","$ce04d3a99e08e73b$var$step","addEventListener","target","elements","value","$ce04d3a99e08e73b$var$position","i","$ce04d3a99e08e73b$var$foo","Promise","resolve","reject","setTimeout","Math","random","console","log","concat","then","param","position3","position","delay3","delay","catch","position4","delay4"],"version":3,"file":"03-promises.4a52cf02.js.map"}