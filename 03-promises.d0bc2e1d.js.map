{"mappings":"gfAAAA,EAAA,SAEA,IAiCuBC,EAAUC,EAjC3BC,EAAOC,SAASC,cAAc,QAC9BC,EAAWH,EAAKE,cAAc,UAC9BE,EAAWJ,EAAKE,cAAc,SAC9BG,EAAUL,EAAKE,cAAc,QAC7BI,EAAYN,EAAKE,cAAc,UAI/BK,EAAQC,OAAOJ,EAASK,iBAAiBC,OAAOC,SAASC,OACzDC,EAAOR,EAAQI,iBAAiBC,OAAOC,SAASC,MAChDE,EAAWR,EAAUG,iBAAiBC,OAAOC,SAASC,MAC5DG,QAAQC,IAAIT,GAEZJ,EAASM,iBAAiB,QAG1B,WACE,IAAI,IAAIQ,EAAE,EAAGA,GAAKH,EAAUG,GAAK,EAAE,CACjCH,EAAWG,EAWVV,GAAgBM,C,EAhBcK,IAEnCC,SAAW,GAkBYrB,EAWT,EAXmBC,EAWhB,KAVP,IAAIqB,SAAQ,SAACC,EAASC,GAC5BC,YAAW,WACSC,KAAKC,SAAW,GAEpCJ,EAAQN,QAAQC,IAAI,uBAAwCU,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,QAEhEuB,EAAKP,QAAQC,IAAI,sBAAuCU,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,O,GAEjEA,E,KAGA4B,MAAK,SAAAC,G,IAAGC,EAAQD,EAARE,SAAUC,EAAKH,EAALI,MACjBjB,QAAQC,IAAI,uBAAwCU,OAAfG,EAAS,QAAYH,OAANK,EAAM,M,IAE3DE,OAAM,SAAAL,G,IAAGM,EAAQN,EAARE,SAAUK,EAAKP,EAALI,MAClBjB,QAAQC,IAAI,sBAAqCU,OAAfQ,EAAS,QAAYR,OAANS,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form');\nconst startBtn = form.querySelector('submit');\nconst delayInp = form.querySelector('delay');\nconst stepInp = form.querySelector('step');\nconst numberInp = form.querySelector('amount');\n\n\n\nconst delay = Number(delayInp.addEventListener.target.elements.value);\nconst step = stepInp.addEventListener.target.elements.value;\nconst position = numberInp.addEventListener.target.elements.value;\nconsole.log(delay)\n\nstartBtn.addEventListener('click', foo() )\n\nnewDelay = 0\nfunction foo(){\n  for(let i=1; i <= position; i += 1){\n    position = i;\n    function createPromise(position, delay) {\n      return new Promise((resolve, reject) => {\n       setTimeout(() => {\n     const shouldResolve = Math.random() > 0.3;\n     if (shouldResolve) {\n       resolve(console.log(`✅ Fulfilled promise ${position} in ${delay}ms`))\n     } else {\n       reject(console.log(`❌ Rejected promise ${position} in ${delay}ms`))\n     }\n   }, delay)})}\n     delay = delay + step;\n    //  console.log(delay)\n  }}\n\nfunction createPromise(position, delay) {\n   return new Promise((resolve, reject) => {\n    setTimeout(() => {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    resolve(console.log(`✅ Fulfilled promise ${position} in ${delay}ms`))\n  } else {\n    reject(console.log(`❌ Rejected promise ${position} in ${delay}ms`))\n  }\n}, delay)})}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  })\n"],"names":["parcelRequire","position2","delay2","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$startBtn","$ce04d3a99e08e73b$var$delayInp","$ce04d3a99e08e73b$var$stepInp","$ce04d3a99e08e73b$var$numberInp","$ce04d3a99e08e73b$var$delay","Number","addEventListener","target","elements","value","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$position","console","log","i","$ce04d3a99e08e73b$var$foo","newDelay","Promise","resolve","reject","setTimeout","Math","random","concat","then","param","position3","position","delay3","delay","catch","position4","delay4"],"version":3,"file":"03-promises.d0bc2e1d.js.map"}