{"mappings":"oeAAAA,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,QAC9BC,EAAWH,EAAKE,cAAc,UAC9BE,EAAWJ,EAAKE,cAAc,SAC9BG,EAAUL,EAAKE,cAAc,QAC7BI,EAAYN,EAAKE,cAAc,UAI/BK,EAAQH,EAASI,iBAAiBC,OAAOC,SAASC,MAClDC,EAAOP,EAAQG,iBAAiBC,OAAOC,SAASC,MAChDE,EAAWP,EAAUE,iBAAiBC,OAAOC,SAASC,MAqB5D,IAAuBG,EAAUC,EAnBjCZ,EAASK,iBAAiB,QAG1B,WACE,IAAI,IAAIQ,EAAE,EAAGA,GAAKH,EAAUG,GAAK,EAAE,CACjCH,EAAWG,EAWVT,GAAgBK,C,EAhBcK,KAmBZH,EAWT,EAXmBC,EAWhB,KAVP,IAAIG,SAAQ,CAACC,EAASC,KAC5BC,YAAW,KACSC,KAAKC,SAAW,GAEpCJ,EAAQK,QAAQC,IAAI,uBAAqBX,QAAiBC,QAExDK,EAAKI,QAAQC,IAAI,sBAAoBX,QAAiBC,OAAW,GAEpEA,EAAM,KAGNW,MAAK,EAAGC,SAAAC,EAAUC,MAAAC,MACjBN,QAAQC,IAAI,uBAAqBG,QAAiBE,MAAU,IAE7DC,OAAM,EAAGJ,SAAAK,EAAUH,MAAAI,MAClBT,QAAQC,IAAI,sBAAoBO,QAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form');\nconst startBtn = form.querySelector('submit');\nconst delayInp = form.querySelector('delay');\nconst stepInp = form.querySelector('step');\nconst numberInp = form.querySelector('amount');\n\n\n\nconst delay = delayInp.addEventListener.target.elements.value;\nconst step = stepInp.addEventListener.target.elements.value;\nconst position = numberInp.addEventListener.target.elements.value;\n\nstartBtn.addEventListener('click', foo() )\n\n// newDelay = 0\nfunction foo(){\n  for(let i=1; i <= position; i += 1){\n    position = i;\n    function createPromise(position, delay) {\n      return new Promise((resolve, reject) => {\n       setTimeout(() => {\n     const shouldResolve = Math.random() > 0.3;\n     if (shouldResolve) {\n       resolve(console.log(`✅ Fulfilled promise ${position} in ${delay}ms`))\n     } else {\n       reject(console.log(`❌ Rejected promise ${position} in ${delay}ms`))\n     }\n   }, delay)})}\n     delay = delay + step\n  }}\n\nfunction createPromise(position, delay) {\n   return new Promise((resolve, reject) => {\n    setTimeout(() => {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    resolve(console.log(`✅ Fulfilled promise ${position} in ${delay}ms`))\n  } else {\n    reject(console.log(`❌ Rejected promise ${position} in ${delay}ms`))\n  }\n}, delay)})}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  })\n"],"names":["parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$startBtn","$47d4ff9957288465$var$delayInp","$47d4ff9957288465$var$stepInp","$47d4ff9957288465$var$numberInp","$47d4ff9957288465$var$delay","addEventListener","target","elements","value","$47d4ff9957288465$var$step","$47d4ff9957288465$var$position","position2","delay2","i","$47d4ff9957288465$var$foo","Promise","resolve","reject","setTimeout","Math","random","console","log","then","position","position3","delay","delay3","catch","position4","delay4"],"version":3,"file":"03-promises.04d2f5d1.js.map"}